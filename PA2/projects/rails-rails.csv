title,number,state,created_at,user,commits,additions,deletions,changed_files,closed_at,body
"Fix translate method with default: nil",37895,open,2019-12-05T22:16:14Z,swrobel,1,6,1,2,Null,"### Summary    `I18n.translate('missing.translation'  default: nil)` will return `nil` but the wrapper in ActionView will actually change that default to `[]` which causes `translation missing` to be returned  which changes the expected underlying behavior of I18n. This fixes that scenario.  "
"Switch to the writer DB to generate ASt previews",37893,closed,2019-12-05T15:22:52Z,georgeclaghorn,1,16,1,2,2019-12-05T17:56:43Z,"Fixes that preview generation would fail in apps using Active Record multi-DB support to default GET requests to a read-only replica DB. Preview requests are necessarily GETs and need to use the writer."
"Bring back feature that allows loading external route files:",37892,open,2019-12-05T14:14:03Z,Edouard-chin,1,138,5,10,Null,"Bring back feature that allows loading external route files:      This feature existed back in 2012     https://github.com/rails/rails/commit/5e7d6bba79393de0279917f93b82f3b7b176f4b5    but got reverted with the incentive that there was a better approach.    After discussions  we agreed that it's a useful feature for apps    that have a really large set of routes.      Co-authored-by: Yehuda Katz <wycats@gmail.com>    cc/ @rafaelfranca @etiennebarrie @casperisfine"
"Update docs of String methods using ActiveSupport::Inflector",37890,open,2019-12-05T03:34:52Z,nard-tech,1,38,4,1,Null,"### Summary    * Add references to methods defined in `ActiveSupport::Inflector`  * Add document of aliased method (`#camelcase`)  "
"Add `Rails::Application::Configuration#database_configuration=`",37889,closed,2019-12-05T02:07:24Z,r7kamura,1,59,26,3,2019-12-05T19:46:17Z,"### Summary    I added the following changes:    - Added `Rails::Application::Configuration#database_configuration=`  - Changed `Rails::Application::Configuration#database_configuration`    so that we can set database configuration without config/database.yml or `ENV[\"DATABASE_URL\"]`.    ```ruby  Rails.configuration.database_configuration = {    \"development\" => {      \"adapter\" => \"sqlite3\"       \"database\" => \":memory:\"    }  }  ```    ### Other Information    I needed this API at https://github.com/rails/rails/pull/37888/files#diff-1d52fed1aa29d830cc0d3c9c4fa97c8dR38."
"Add bug report templates for Active Storage",37888,closed,2019-12-05T01:02:15Z,r7kamura,1,136,0,3,2019-12-05T02:02:44Z,"### Summary    I added bug report templates for Active Storage. I hope this will make it easier to provide executable test case on Active Storage issues.    ### Other Information    ```  $ ruby guides/bug_report_templates/active_storage_gem.rb  Fetching gem metadata from https://rubygems.org/.............  Fetching gem metadata from https://rubygems.org/.  Resolving dependencies...  Using rake 13.0.1 (was 13.0.0)  Using concurrent-ruby 1.1.5  Using i18n 1.7.0  Using minitest 5.13.0 (was 5.12.2)  Using thread_safe 0.3.6  Using tzinfo 1.2.5  Using zeitwerk 2.2.2  Using activesupport 6.0.0 (was 6.1.0.alpha)  Using builder 3.2.3  Using erubi 1.9.0  Using mini_portile2 2.4.0  Using nokogiri 1.10.7 (was 1.10.4)  Using rails-dom-testing 2.0.3  Using crass 1.0.5 (was 1.0.4)  Using loofah 2.4.0 (was 2.3.0)  Using rails-html-sanitizer 1.3.0  Using actionview 6.0.0 (was 6.1.0.alpha)  Using rack 2.0.7  Using rack-test 1.1.0  Using actionpack 6.0.0 (was 6.1.0.alpha)  Using nio4r 2.5.2  Using websocket-extensions 0.1.4  Using websocket-driver 0.7.1  Using actioncable 6.0.0 (was 6.1.0.alpha)  Using globalid 0.4.2  Using activejob 6.0.0 (was 6.1.0.alpha)  Using activemodel 6.0.0 (was 6.1.0.alpha)  Using activerecord 6.0.0 (was 6.1.0.alpha)  Using mimemagic 0.3.3  Using marcel 0.3.3  Using activestorage 6.0.0 (was 6.1.0.alpha)  Using mini_mime 1.0.2  Using mail 2.7.1  Using actionmailbox 6.0.0 (was 6.1.0.alpha)  Using actionmailer 6.0.0 (was 6.1.0.alpha)  Using actiontext 6.0.0 (was 6.1.0.alpha)  Using bundler 1.17.3  Using method_source 0.9.2  Using thor 0.20.3  Using railties 6.0.0 (was 6.1.0.alpha)  Using sprockets 4.0.0  Using sprockets-rails 3.2.1  Using rails 6.0.0 (was 6.1.0.alpha)  Using sqlite3 1.4.1  -- create_table(:active_storage_blobs  {})  D  [2019-12-05T09:59:44.307492 #71446] DEBUG -- :    (0.8ms)  SELECT sqlite_version(*)  D  [2019-12-05T09:59:44.308370 #71446] DEBUG -- :    (0.3ms)  CREATE TABLE \"active_storage_blobs\" (\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL  \"key\" varchar NOT NULL  \"filename\" varchar NOT NULL  \"content_type\" varchar  \"metadata\" text  \"byte_size\" bigint NOT NULL  \"checksum\" varchar NOT NULL  \"created_at\" datetime NOT NULL)  D  [2019-12-05T09:59:44.308909 #71446] DEBUG -- :    (0.1ms)  CREATE UNIQUE INDEX \"index_active_storage_blobs_on_key\" ON \"active_storage_blobs\" (\"key\")     -> 0.0893s  -- create_table(:active_storage_attachments  {})  D  [2019-12-05T09:59:44.309464 #71446] DEBUG -- :    (0.1ms)  CREATE TABLE \"active_storage_attachments\" (\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL  \"name\" varchar NOT NULL  \"record_type\" varchar NOT NULL  \"record_id\" integer NOT NULL  \"blob_id\" integer NOT NULL  \"created_at\" datetime NOT NULL  CONSTRAINT \"fk_rails_c3b3935057\"  FOREIGN KEY (\"blob_id\")    REFERENCES \"active_storage_blobs\" (\"id\")  )  D  [2019-12-05T09:59:44.309850 #71446] DEBUG -- :    (0.1ms)  CREATE  INDEX \"index_active_storage_attachments_on_blob_id\" ON \"active_storage_attachments\" (\"blob_id\")  D  [2019-12-05T09:59:44.310553 #71446] DEBUG -- :    (0.2ms)  CREATE UNIQUE INDEX \"index_active_storage_attachments_uniqueness\" ON \"active_storage_attachments\" (\"record_type\"  \"record_id\"  \"name\"  \"blob_id\")     -> 0.0016s  -- create_table(:users  {:force=>true})  D  [2019-12-05T09:59:44.310846 #71446] DEBUG -- :    (0.0ms)  DROP TABLE IF EXISTS \"users\"  D  [2019-12-05T09:59:44.311078 #71446] DEBUG -- :    (0.1ms)  CREATE TABLE \"users\" (\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL)     -> 0.0005s  D  [2019-12-05T09:59:44.331185 #71446] DEBUG -- :    (0.1ms)  CREATE TABLE \"ar_internal_metadata\" (\"key\" varchar NOT NULL PRIMARY KEY  \"value\" varchar  \"created_at\" datetime(6) NOT NULL  \"updated_at\" datetime(6) NOT NULL)  D  [2019-12-05T09:59:44.338438 #71446] DEBUG -- :   ActiveRecord::InternalMetadata Load (0.1ms)  SELECT \"ar_internal_metadata\".* FROM \"ar_internal_metadata\" WHERE \"ar_internal_metadata\".\"key\" = ? LIMIT ?  [[\"key\"  \"environment\"]  [\"LIMIT\"  1]]  D  [2019-12-05T09:59:44.342639 #71446] DEBUG -- :    (0.0ms)  begin transaction  D  [2019-12-05T09:59:44.342919 #71446] DEBUG -- :   ActiveRecord::InternalMetadata Create (0.1ms)  INSERT INTO \"ar_internal_metadata\" (\"key\"  \"value\"  \"created_at\"  \"updated_at\") VALUES (?  ?  ?  ?)  [[\"key\"  \"environment\"]  [\"value\"  \"development\"]  [\"created_at\"  \"2019-12-05 00:59:44.342239\"]  [\"updated_at\"  \"2019-12-05 00:59:44.342239\"]]  D  [2019-12-05T09:59:44.343112 #71446] DEBUG -- :    (0.1ms)  commit transaction  Run options: --seed 55600    # Running:    D  [2019-12-05T09:59:44.394111 #71446] DEBUG -- :    (0.0ms)  begin transaction  D  [2019-12-05T09:59:44.394279 #71446] DEBUG -- :   User Create (0.1ms)  INSERT INTO \"users\" DEFAULT VALUES  D  [2019-12-05T09:59:44.412614 #71446] DEBUG -- :   ActiveStorage::Blob Load (0.1ms)  SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" INNER JOIN \"active_storage_attachments\" ON \"active_storage_blobs\".\"id\" = \"active_storage_attachments\".\"blob_id\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?  [[\"record_id\"  1]  [\"record_type\"  \"User\"]  [\"name\"  \"profile\"]  [\"LIMIT\"  1]]  D  [2019-12-05T09:59:44.434987 #71446] DEBUG -- :   ActiveStorage::Attachment Load (0.1ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?  [[\"record_id\"  1]  [\"record_type\"  \"User\"]  [\"name\"  \"profile\"]  [\"LIMIT\"  1]]  D  [2019-12-05T09:59:44.435971 #71446] DEBUG -- :   ActiveStorage::Blob Create (0.1ms)  INSERT INTO \"active_storage_blobs\" (\"key\"  \"filename\"  \"content_type\"  \"metadata\"  \"byte_size\"  \"checksum\"  \"created_at\") VALUES (?  ?  ?  ?  ?  ?  ?)  [[\"key\"  \"hu38pl4sgabhlhhg1jnr1qm8egpo\"]  [\"filename\"  \"dummy.txt\"]  [\"content_type\"  \"text/plain\"]  [\"metadata\"  \"{\\"identified\\":true}\"]  [\"byte_size\"  5]  [\"checksum\"  \"J1h240z2CdsRjz2Et5mnkA==\"]  [\"created_at\"  \"2019-12-05 00:59:44.435415\"]]  D  [2019-12-05T09:59:44.436516 #71446] DEBUG -- :   ActiveStorage::Attachment Create (0.1ms)  INSERT INTO \"active_storage_attachments\" (\"name\"  \"record_type\"  \"record_id\"  \"blob_id\"  \"created_at\") VALUES (?  ?  ?  ?  ?)  [[\"name\"  \"profile\"]  [\"record_type\"  \"User\"]  [\"record_id\"  1]  [\"blob_id\"  1]  [\"created_at\"  \"2019-12-05 00:59:44.436202\"]]  D  [2019-12-05T09:59:44.437185 #71446] DEBUG -- :    (0.0ms)  commit transaction  I  [2019-12-05T09:59:44.439392 #71446]  INFO -- :   Disk Storage (2.0ms) Uploaded file to key: hu38pl4sgabhlhhg1jnr1qm8egpo (checksum: J1h240z2CdsRjz2Et5mnkA==)  I  [2019-12-05T09:59:44.460777 #71446]  INFO -- : Enqueued ActiveStorage::AnalyzeJob (Job ID: 90b56681-d8a7-4022-8ccd-af598a883be5) to Async(default) with arguments: #<GlobalID:0x00007ffb36f2ace0 @uri=#<URI::GID gid://test-app/ActiveStorage::Blob/1>>  I  [2019-12-05T09:59:44.461413 #71446]  INFO -- :   Disk Storage (0.1ms) Downloaded file from key: hu38pl4sgabhlhhg1jnr1qm8egpo  .    Finished in 0.070695s  14.1453 runs/s  14.1453 assertions/s.  1 runs  1 assertions  0 failures  0 errors  0 skips  ```"
"Small doc fixes for ActiveJob::Exceptions::ClassMethods#retry_on",37886,closed,2019-12-04T21:29:01Z,tjschuck,1,2,2,1,2019-12-04T23:12:37Z,"Follow up to https://github.com/rails/rails/pull/31872    Particularly  the closing `</tt>` tag of the documented wait algorithm had a misplaced `<`.  Threw in a space between `15% (0.15)` for good measure."
"Document working with association and checkboxes in a form",37885,open,2019-12-04T20:17:00Z,gwincr11,3,79,0,1,Null,"Motivation:    - I frequently look for this in the docs then struggle to rememeber    the name of the function I need to find in the api docs. Also I think    other people may benefit from it being easier to find.    Changes:    - Added a section about Collection Checkboxes to the docs.    ### Summary    <!-- Provide a general description of the code changes in your pull  request... were there any bugs you had fixed? If so  mention them. If  these bugs have open GitHub issues  be sure to tag them here as well   to keep the conversation linked together. -->    ### Other Information    <!-- If there's anything else that's important and relevant to your pull  request  mention that information here. This could include  benchmarks  or other information.    If you are updating any of the CHANGELOG files or are asked to update the  CHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file.    Finally  if your pull request affects documentation or any non-code  changes  guidelines for those changes are [available  here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)    Thanks for contributing to Rails! -->  "
"Add `page` generator",37884,open,2019-12-04T17:54:46Z,jonathanhefner,1,66,0,3,Null,"The `page` generator generates one-off pages in an idiomatic way.  Specifically  a one-off page will have a corresponding route and a dedicated controller with `index` action and view.    ---    I often see questions about the best practice for adding an e.g. \"About Us\" page to a Rails app.  Many answers recommend using a single controller with one or more non-REST action.  Some answers even recommend additional gems to manage one-off pages.    The `page` generator establishes and encourages a convention for one-off pages based on DHH's recommendations from a [podcast](http://www.fullstackradio.com/32) ([transcript of relevant portion](http://jeromedalbert.com/how-dhh-organizes-his-rails-controllers/)).  For example  `rails generate page about` will generate the `/about` route  `AboutController` with `index` action  index view  and integration tests.    (As a point of clarity  the `page` generator differs from the `controller` generator in that the `controller` generator generates routes as `/#{controller}/#{action}`  with tests to match.  So `rails generate controller about index` will generate an `/about/index` route and a test that invokes `about_index_url`.)    The `page` generator also provides a `--root` option to generate the root route.  For example  `rails generate page home --root` will additionally draw the `/` route to `HomeController#index`.    TODO:  - [ ] tests  "
"Should keep the original parts for zero duration",37882,closed,2019-12-04T14:04:31Z,kamipo,1,14,4,2,2019-12-04T22:33:20Z,"Follow up to https://github.com/rails/rails/pull/37849#issuecomment-560557239.    Without this  `0.days` is considered as `0.seconds` due to #31310.  We should not lose the original parts."
"Update active_storage_overview.md",37881,closed,2019-12-04T14:03:40Z,pierredemilly,1,2,2,1,2019-12-04T17:08:27Z,"### Summary    Updated doc for Microsoft Azure. The service adapter is in the `azure-storage` gem.  "
"[skip ci] Update initialization guide start method to include change",37879,closed,2019-12-04T11:15:06Z,tomily1,1,4,10,1,2019-12-04T11:28:46Z,"### Summary  The initialization guide contains some piece of code that has been removed from the codebase.   ```  def print_boot_information  ....  end  ```  I updated the guide and removed this code  <!-- Provide a general description of the code changes in your pull  request... were there any bugs you had fixed? If so  mention them. If  these bugs have open GitHub issues  be sure to tag them here as well   to keep the conversation linked together. -->    ### Other Information    <!-- If there's anything else that's important and relevant to your pull  request  mention that information here. This could include  benchmarks  or other information.    If you are updating any of the CHANGELOG files or are asked to update the  CHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file.    Finally  if your pull request affects documentation or any non-code  changes  guidelines for those changes are [available  here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)    Thanks for contributing to Rails! -->  "
"Hide internal utility methods in the public API doc [ci skip]",37878,closed,2019-12-04T09:50:23Z,kamipo,1,3,3,1,2019-12-04T13:49:34Z,"I digged the history for the internal utility methods (`convert_key`   `convert_value`  and `set_defaults`)  I believe it is apparently not  intended to appear them in the public API doc.    * `convert_key`  `convert_value`: 71742114  * `set_defaults`: #20828    https://api.rubyonrails.org/v6.0.1/classes/ActiveSupport/HashWithIndifferentAccess.html    Since we sometimes makes breaking change for internal methods (e.g.  #37870)  so that methods should not be leaked to the public API doc."
"Remove deprecated non-symbol access to nested config_for hashes",37876,closed,2019-12-03T21:54:20Z,etiennebarrie,1,44,171,4,2019-12-04T16:46:23Z,"### Summary    This fixes an issue with #37870 where nested hashes returned by `config_for` could return Hash subclasses instead of strictly a Hash when calling `to_hash`.    Since we changed the name of the `for` option in HashWithIndifferentAccess  and the class dealing with deprecations takes an options hash  there's no exception but the option is silently ignored  which in turn changes the behavior of `HashWithIndifferentAccess#to_hash`.    Instead of fixing the code  this removes the deprecation code  which also solves the issue.    ```ruby  # before #37870   Rails.application.config_for(:example)[:a_hash].to_hash[:other_hash]['key'] # => nil    # after #37870   Rails.application.config_for(:example)[:a_hash].to_hash[:other_hash]['key']  # DEPRECATION WARNING: Accessing hashes returned from config_for by non-symbol keys is deprecated and will be removed in Rails 6.1. Use symbols for access instead. (called from <main> at (pry):1)  # => \"value\"    # after this PR  Rails.application.config_for(:example)[:a_hash].to_hash[:other_hash]['key'] # => nil  ```    ### Other Information    I used the `symbolize_names` option `YAML.load`  which seems to be the first usage of it in Rails. This required me to symbolize the environment name  and the `\"shared\"` special key.  Another possibility would be to use `deep_symbolize_keys` as was done before #35198  but since we're loading the configuration file ourselves  it felt like an unnecessary traversal of the whole data structure. Let me know if that was a mistake.    @rafaelfranca  cc @byroot @Edouard-chin @paracycle @Morriar"
"Deprecate `database` kwarg from `connected_to` without replacement",37874,closed,2019-12-03T20:28:47Z,eileencodes,1,39,53,3,2019-12-04T17:08:02Z,"The `database` kwarg in `connected_to` has resulted in a lot of bug  reports that are trying to use it for sharding when that's not the  intent of the key. After considering where the database kwarg is used in  tests and thinking about usecases for it  we've determined it should be  removed.    There are plans to add sharding support and in the mean time the  database kwarg isn't the right solution for that. Applications that need  to create new connections can use establish_connection or connects_to.  Since the database key causes new connections to be established on every  call  that causes bugs if connected_to with a database kwarg is used  during a request or for any connection that's not a one-off.    Co-authored-by: John Crepezzi <john.crepezzi@gmail.com>"
"Fix bug in configs_for",37873,closed,2019-12-03T19:38:58Z,eileencodes,1,23,9,2,2019-12-03T21:16:25Z,"If a spec name was provided without an env name  config_for would return  the first config that matched the spec  regardless of environment name.    Now configs_for will return the database config that matches the  default env and requested spec name.    Additionally this commit has moved the default env call into a method  because I'm tired of typing so many lines every single time.    We considered either returning all configs that match that spec name or  raising an error if only spec was passed  but this change has the least  impact on current behavior and matches Active Record's assumptions: that  if you ask for configs it will always consider the current environment.    Co-authored-by: John Crepezzi <john.crepezzi@gmail.com>"
"Add support for conditional values to TagBuilder",37872,closed,2019-12-03T18:32:23Z,joelhawksley,3,93,1,3,2019-12-04T19:50:55Z,"This PR adds support for conditional values to TagBuilder   extracting logic we use in the GitHub application   inspired by https://github.com/JedWatson/classnames.    It’s common practice to conditionally apply CSS classes  in Rails views. This can lead to messy string interpolation   often using ternaries:    ```ruby  content_tag(    \"My username\"     class: \"always #{'sometimes' if current_user.special?} another\"  )  ```    By adding support for hashes to TagBuilder  we can instead write the following:    ```ruby  content_tag(    \"My username\"     class: [\"always\"  \"another\"  { 'sometimes' => current_user.special? }]  )  ```    cc @JedWatson  "
"Avoid allocating Binding instance in HWIA#convert_value",37870,closed,2019-12-03T16:44:24Z,casperisfine,1,4,6,1,2019-12-03T17:22:41Z,"`ActiveSupport::HashWithIndifferentAccess#convert_value` appeared quite high in some production profile so I took a look and found that weird `binding` access.    Digging into the git history to figure the reason  it seems it originate from https://github.com/rails/rails/pull/36758 and then https://github.com/rails/rails/commit/64a430129fbec2320054a8fc85672994f38a9ee0    The initial goal was to reduce the allocation in that hotspot by using keyword arguments. But since `for` is a keyword  `binding.get_local_variable` was used as a workaround.     However `binding` does allocate a new `Binding` instance on each invocation  and is a quite slow method.    But since `convert_value` is a private method  I think we can simply rename the argument  and avoid all of that.    I adapted the benchmark from https://github.com/rails/rails/pull/36758:     ```ruby  require 'bundler/inline'    gemfile(true) do    source 'https://rubygems.org'    gem 'activesupport'    gem 'benchmark-ips'    gem 'memory_profiler'  end    require 'active_support/all'    class OptimizedHashWithIndifferentAccess < ActiveSupport::HashWithIndifferentAccess    private      EMPTY_HASH = {}.freeze      # Convert to a regular hash with string keys.    def to_hash      _new_hash = Hash.new      set_defaults(_new_hash)        each do |key  value|        _new_hash[key] = convert_value(value  conversion: :to_hash)      end      _new_hash    end        def []=(key  value)      regular_writer(convert_key(key)  convert_value(value  conversion: :assignment))    end        def convert_value(value  conversion: nil) # :doc:      if value.is_a? Hash        if conversion == :to_hash          value.to_hash        else          value.nested_under_indifferent_access        end      elsif value.is_a?(Array)        if conversion != :assignment || value.frozen?          value = value.dup        end        value.map! { |e| convert_value(e  conversion: conversion) }      else        value      end    end  end    num_values = 25  source = num_values.times.each_with_object({}) { |i  result| result[\"Key#{i}\"] = i }    Benchmark.ips do |x|    x.report(\"original\") { ActiveSupport::HashWithIndifferentAccess.new(source) }    x.report(\"optimized\") { OptimizedHashWithIndifferentAccess.new(source) }    x.compare!  end    original_memory = MemoryProfiler.report do    ActiveSupport::HashWithIndifferentAccess.new(source)  end    optimized_memory = MemoryProfiler.report do    OptimizedHashWithIndifferentAccess.new(source)  end    puts \"Memory Change: #{(original_memory.total_allocated_memsize - optimized_memory.total_allocated_memsize)} bytes\"  ```    Produce the following output:  ```  Warming up --------------------------------------              original    11.834k i/100ms             optimized    12.398k i/100ms  Calculating -------------------------------------              original    126.947k (±10.8%) i/s -    627.202k in   5.009570s             optimized    128.584k (±11.3%) i/s -    644.696k in   5.084137s    Comparison:             optimized:   128584.3 i/s              original:   126946.7 i/s - same-ish: difference falls within error    Memory Change: 5800 bytes  ```    @kaspth @rafaelfranca     cc @etiennebarrie @Edouard-chin @paracycle @Morriar @ignacio-chiazzo"
"Fix ActiveStorage::Blob → ActionText::TrixAttachment conversion",37868,closed,2019-12-03T11:07:53Z,javan,1,6,2,2,2019-12-03T15:16:54Z,"A regression introduced in 764803e07a5c89c931df9a1c4fe730f73b7571e6 caused blobs to appear as HTML content attachments instead of file / image attachments when editing rich text content. This change restores the original intended behavior.    References: https://github.com/rails/rails/pull/35485  https://github.com/basecamp/trix/issues/706"
"Add the ability to customize `ActionDispatch::RequestId` http header and generator",37867,open,2019-12-03T09:55:35Z,nkondratyev,1,42,22,5,Null,"### Summary    There should be able to set HTTP header for request id instead of [deprecated](https://tools.ietf.org/html/rfc6648) X-Request-Id or in case of custom HTTP header passed by load balancer.    It may also be useful to change random request id generator from UUID to [ULID](https://github.com/ulid/spec) or something else."
"Correct default value of `unknown_asset_fallback` [ci skip]",37866,closed,2019-12-03T08:04:17Z,giraffate,1,1,1,1,2019-12-03T09:05:10Z,"### Summary  `unknown_asset_fallback` defaults to `false`.  Refer to 6813b480a1.    In addition  I also referred to https://github.com/rails/rails/blob/master/railties/lib/rails/application/configuration.rb#L95.  "
"number_to_currency negative zero fix",37865,open,2019-12-03T06:29:29Z,hectorbus,1,11,1,4,Null,"### Summary    Adds a validation for when the number value is a negative zero with decimals.    **Issue:** #37846   "
"Fix typo colection -> collection",37863,closed,2019-12-03T04:26:29Z,abhaynikam,1,1,1,1,2019-12-03T04:40:39Z,"`colection` -> `collection`    **NOTE:** This PR is raised on `6-0-2` branch and not on `master`."
"Fix random CI failure due to non-deterministic sorting order",37862,closed,2019-12-03T00:47:47Z,giraffate,1,1,1,1,2019-12-03T09:04:52Z,"### Summary  Reference:  https://buildkite.com/rails/rails/builds/65255#d4ce371f-75e6-4f82-98e8-d2a0d9f791f5/1005-1016    "
"Add download and delete methods for ActiveStorage::Variant",37860,open,2019-12-02T20:57:27Z,peterzhu2118,1,28,0,2,Null,"### Summary    Adds `download` and `delete` methods to `ActiveStorage::Variant` that allow you to download or delete a variant from the backing service  respectively.  "
"Fix bug when requesting for variants in public disk controller",37859,open,2019-12-02T20:35:40Z,peterzhu2118,1,21,2,2,Null,"### Summary    There's a bug when requesting for a variant in `PublicDiskController` because the variant sets a different [`key` attribute](https://github.com/rails/rails/blob/master/activestorage/app/models/active_storage/variant.rb#L73) that causes `ActiveStorage::Blob.find_by` to fail and thus it returns a 404 not found. This PR extracts the key of the blob from the URL parameter in order to find the blob.  "
"Deprecate `service_url` methods in favour of `url`",37856,closed,2019-12-02T16:36:37Z,peterzhu2118,1,46,35,9,2019-12-02T22:09:09Z,"### Summary    #36729 added support for public services in Active Storage and deprecated `Blob#service_url` method for `Blob#url`. However  `Variant#service_url` and `Preview#service_url` were not updated to be consistent. This PR deprecates `Variant#service_url` and `Preview#service_url` and changes them to be `url` instead.  "
"Use `app.config.file_watcher` for watcher in `RoutesReloader`",37853,open,2019-12-02T14:06:30Z,tgxworld,1,5,7,3,Null,"### Summary    Use `config.file_watcher` to determine which class to use as the watcher for `Rails::Application::RoutesReloader`. Currently it is being hardcoded to `ActiveSupport::FileUpdateChecker`.    "
"Allow non-hash values in config files",37850,open,2019-12-02T10:55:14Z,casperisfine,1,32,5,2,Null,"Fix: https://github.com/rails/rails/issues/37800    That's one of the possible fixes  the alternative could be to acknowledge that the value must be a Hash  and raise a clear error when it's not.    @rafaelfranca     cc @henvo  @etiennebarrie @Edouard-Chin  "
"Fix `since` and `ago` with a duration which has empty parts",37849,closed,2019-12-02T09:19:39Z,kamipo,1,10,4,2,2019-12-02T09:45:03Z,"Related #37839.    Sometimes divisions of `ActiveSupport::Duration` makes the instance's  parts attribute empty  but it has a value actually (e.g. `(1.minute /  60) # => @value=1 (second)  but empty parts`).    In that case we should respect `value` as the source of seconds."
